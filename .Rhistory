narrow.dist.all <- vegdist(narrow.csst.all, method= "bray", binary=FALSE, diag=TRUE, upper=TRUE)
set.seed(209)
narrow.mds.all <- metaMDS(narrow.dist.all, distance = "bray", k=2, trymax = 1000)
meta.narrow = transform_sample_counts(meta.narrow, function(x) x/sum(x))
data.scores.all <- as.data.frame(scores(narrow.mds.all))
data.scores.all$sample <- rownames(data.scores.all)
data.scores.all$Year.Station<-narrow.mds.all$seq.sample
data.scores.all$transect<-narrow.mds.all$site_tree_id_transect_id
data.scores.all$ph<-narrow.mds.all$p_h
data.scores.all$moisture<-narrow.mds.all$percent_soil_moisture
data.scores.all$pt <- narrow.mds.all$dist_along_transect
data.scores.all$transect <- narrow.mds.all$site_tree_id_transect_id
data.scores.all$organic <- narrow.mds.all$c_n_ratio
data.scores.all$total.neighbors <- narrow.mds.all$total
data.scores.all$qudo.rescaled <- narrow.mds.all$qudo.rescaled
data.scores.all$quag.rescaled <- narrow.mds.all$quag.rescaled
data.scores.all$pisa.rescaled <- narrow.mds.all$pisa.rescaled
data.scores.all$neighbors.rescaled <- narrow.mds.all$total.neighbors.rescaled
data.scores.all$group <- rep("all", length(data.scores.all[,1]))
data.scores.all$species <- narrow.mds.all$species
View(data.scores.all)
make_metagenomeSeq = function(physeq) {
require("metagenomeSeq")
require("phyloseq")
# Enforce orientation
if (!taxa_are_rows(physeq)) {
physeq <- t(physeq)}
OTU = as(otu_table(physeq), "matrix")
# Convert sample_data to AnnotatedDataFrame
ADF = AnnotatedDataFrame(data.frame(sample_data(physeq)))
# define dummy 'feature' data for OTUs, using their name Helps with
# extraction and relating to taxonomy later on.
TDF = AnnotatedDataFrame(data.frame(OTUname = taxa_names(physeq), row.names = taxa_names(physeq)))
# Create the metagenomeSeq object
MGS = newMRexperiment(counts = OTU, phenoData = ADF, featureData = TDF)
# Trigger metagenomeSeq to calculate its Cumulative Sum scaling factor.
MGS = cumNorm(MGS)
return(MGS)
}
View(Metadata)
View(narrow.mds.all)
data.scores.all <- as.data.frame(scores(narrow.mds.all))
data.scores.all$sample <- rownames(data.scores.all)
data.scores.all$Year.Station<-narrow.mds.all$seq.sample
data.scores.all$transect<-narrow.mds.all$site_tree_id_transect_id
data.scores.all$ph<-narrow.mds.all$p_h
data.scores.all$moisture<-narrow.mds.all$percent_soil_moisture
data.scores.all$pt <- narrow.mds.all$dist_along_transect
data.scores.all$transect <- narrow.mds.all$site_tree_id_transect_id
data.scores.all$organic <- narrow.mds.all$c_n_ratio
data.scores.all$total.neighbors <- narrow.mds.all$total
data.scores.all$qudo.rescaled <- narrow.mds.all$qudo.rescaled
data.scores.all$quag.rescaled <- narrow.mds.all$quag.rescaled
data.scores.all$pisa.rescaled <- narrow.mds.all$pisa.rescaled
data.scores.all$neighbors.rescaled <- narrow.mds.all$total.neighbors.rescaled
data.scores.all$group <- rep("all", length(data.scores.all[,1]))
data.scores.all$species <- narrow.mds.all$species
data.scores.all <- as.data.frame(scores(narrow.mds.all))
data.scores.all$sample <- rownames(data.scores.all)
View(narrow.mds.all)
data.scores.all <- as.data.frame(scores(narrow.mds.all))
data.scores.all$sample <- rownames(data.scores.all)
View(data.scores.all)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(phyloseq)
library(metagenomeSeq)
library(vegan)
library(here)
library(janitor)
library(gridExtra)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,2:length(Metadata[0,])]
rownames(Metadata.renamed)<- Metadata$SampleNo
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata$SampleNo
narrow.phy = phyloseq(phy.otu, phy.meta)
make_metagenomeSeq = function(physeq) {
require("metagenomeSeq")
require("phyloseq")
# Enforce orientation
if (!taxa_are_rows(physeq)) {
physeq <- t(physeq)}
OTU = as(otu_table(physeq), "matrix")
# Convert sample_data to AnnotatedDataFrame
ADF = AnnotatedDataFrame(data.frame(sample_data(physeq)))
# define dummy 'feature' data for OTUs, using their name Helps with
# extraction and relating to taxonomy later on.
TDF = AnnotatedDataFrame(data.frame(OTUname = taxa_names(physeq), row.names = taxa_names(physeq)))
# Create the metagenomeSeq object
MGS = newMRexperiment(counts = OTU, phenoData = ADF, featureData = TDF)
# Trigger metagenomeSeq to calculate its Cumulative Sum scaling factor.
MGS = cumNorm(MGS)
return(MGS)
}
meta.narrow <- make_metagenomeSeq(narrow.phy)
sample_table_all <- sample_table[which(sample_table$seq_sample %in% colnames(OTU_table_all)),]
data.scores.all$Year.Station<-narrow.mds.all$seq.sample
data.scores.all$transect<-narrow.mds.all$site_tree_id_transect_id
data.scores.all$ph<-narrow.mds.all$p_h
data.scores.all$moisture<-narrow.mds.all$percent_soil_moisture
data.scores.all$pt <- narrow.mds.all$dist_along_transect
data.scores.all$transect <- narrow.mds.all$site_tree_id_transect_id
data.scores.all$organic <- narrow.mds.all$c_n_ratio
data.scores.all$total.neighbors <- narrow.mds.all$total
data.scores.all$qudo.rescaled <- narrow.mds.all$qudo.rescaled
data.scores.all$quag.rescaled <- narrow.mds.all$quag.rescaled
data.scores.all$pisa.rescaled <- narrow.mds.all$pisa.rescaled
data.scores.all$neighbors.rescaled <- narrow.mds.all$total.neighbors.rescaled
data.scores.all$group <- rep("all", length(data.scores.all[,1]))
data.scores.all$species <- narrow.mds.all$species
```
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(phyloseq)
library(metagenomeSeq)
library(vegan)
library(here)
library(janitor)
library(gridExtra)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,2:length(Metadata[0,])]
rownames(Metadata.renamed)<- Metadata$SampleNo
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata$SampleNo
narrow.phy = phyloseq(phy.otu, phy.meta)
make_metagenomeSeq = function(physeq) {
require("metagenomeSeq")
require("phyloseq")
# Enforce orientation
if (!taxa_are_rows(physeq)) {
physeq <- t(physeq)}
OTU = as(otu_table(physeq), "matrix")
# Convert sample_data to AnnotatedDataFrame
ADF = AnnotatedDataFrame(data.frame(sample_data(physeq)))
# define dummy 'feature' data for OTUs, using their name Helps with
# extraction and relating to taxonomy later on.
TDF = AnnotatedDataFrame(data.frame(OTUname = taxa_names(physeq), row.names = taxa_names(physeq)))
# Create the metagenomeSeq object
MGS = newMRexperiment(counts = OTU, phenoData = ADF, featureData = TDF)
# Trigger metagenomeSeq to calculate its Cumulative Sum scaling factor.
MGS = cumNorm(MGS)
return(MGS)
}
meta.narrow.all<-meta.narrow
narrow.css.all <-MRcounts(meta.narrow.all, norm= TRUE, log= TRUE)
narrow.csst.all <- t(narrow.css.all)
narrow.dist.all <- vegdist(narrow.csst.all, method= "bray", binary=FALSE, diag=TRUE, upper=TRUE)
set.seed(209)
narrow.mds.all <- metaMDS(narrow.dist.all, distance = "bray", k=2, trymax = 1000)
data.scores.all <- as.data.frame(scores(narrow.mds.all))
data.scores.all$sample <- rownames(data.scores.all)
View(data.scores.all)
data.scores.all <- as.data.frame(scores(narrow.mds.all))
data.scores.all$sample <- rownames(data.scores.all)
data.scores.all$Year.Station<-narrow.mds.all$seq.sample
data.scores.all$transect<-narrow.mds.all$site_tree_id_transect_id
data.scores.all$ph<-narrow.mds.all$p_h
data.scores.all$moisture<-narrow.mds.all$percent_soil_moisture
data.scores.all$pt <- narrow.mds.all$dist_along_transect
data.scores.all$transect <- narrow.mds.all$site_tree_id_transect_id
data.scores.all$organic <- narrow.mds.all$c_n_ratio
data.scores.all$total.neighbors <- narrow.mds.all$total
data.scores.all$qudo.rescaled <- narrow.mds.all$qudo.rescaled
data.scores.all$quag.rescaled <- narrow.mds.all$quag.rescaled
data.scores.all$pisa.rescaled <- narrow.mds.all$pisa.rescaled
data.scores.all$neighbors.rescaled <- narrow.mds.all$total.neighbors.rescaled
data.scores.all$group <- rep("all", length(data.scores.all[,1]))
data.scores.all$species <- narrow.mds.all$species
data.scores.all <- as.data.frame(scores(narrow.mds.all))
data.scores.all$sample <- rownames(data.scores.all)
data.scores.all$group <- rep("all", length(data.scores.all[,1]))
data.scores.all$species <- narrow.mds.all$species
View(meta.narrow.all)
View(narrow.phy)
data.scores.all$Year.Station<-narrow.phy@sam_data[["Year.Station"]]
data.scores.all$Year<-narrow.phy@sam_data[["Year"]]
narrow.phy@sam_data[["LocnDescriptor"]]
narrow.phy@sam_data[["LocnNumber.NtoS"]]
narrow.phy@sam_data[["Long-N"]]
narrow.phy@sam_data[["Lat-W"]]
narrow.phy@sam_data[["Depth"]]
narrow.phy@sam_data[["Temp"]]
narrow.phy@sam_data[["Cond"]]
narrow.phy@sam_data[["Sal"]]
narrow.phy@sam_data[["DO_pct"]]
narrow.phy@sam_data[["DO_mgL"]]
narrow.phy@sam_data[["chl-a"]]
narrow.phy@sam_data[["LiveWater"]]
narrow.phy@sam_data[["Lugols"]]
narrow.phy@sam_data[["Glut"]]
narrow.phy@sam_data[["Fv/Fm"]]
narrow.phy@sam_data[["Nanodrop_conc"]]
narrow.phy@sam_data[["Nanodrop_260280"]]
narrow.phy@sam_data[["Nanodrop_260230"]]
View(Metadata.renamed)
View(phy.meta)
View(asvs_counts)
View(asvs_taxonomy)
View(Metadata)
data.scores.all <- as.data.frame(scores(narrow.mds.all))
data.scores.all$sample <- rownames(data.scores.all)
data.scores.all$Year.Station<-narrow.phy@sam_data[["Year.Station"]]
data.scores.all$Year<-narrow.phy@sam_data[["Year"]]
data.scores.all$Location<-narrow.phy@sam_data[["LocnDescriptor"]]
data.scores.all$LocationNumber<-narrow.phy@sam_data[["LocnNumber.NtoS"]]
data.scores.all$Longitude-N <- narrow.phy@sam_data[["Long-N"]]
data.scores.all <- as.data.frame(scores(narrow.mds.all))
data.scores.all$sample <- rownames(data.scores.all)
data.scores.all$Year.Station<-narrow.phy@sam_data[["Year.Station"]]
data.scores.all$Year<-narrow.phy@sam_data[["Year"]]
data.scores.all$Location<-narrow.phy@sam_data[["LocnDescriptor"]]
data.scores.all$LocationNumber<-narrow.phy@sam_data[["LocnNumber.NtoS"]]
data.scores.all$Longitude.N <- narrow.phy@sam_data[["Long-N"]]
data.scores.all$Lattitude-W <- narrow.phy@sam_data[["Lat-W"]]
data.scores.all <- as.data.frame(scores(narrow.mds.all))
data.scores.all$sample <- rownames(data.scores.all)
data.scores.all$Year.Station<-narrow.phy@sam_data[["Year.Station"]]
data.scores.all$Year<-narrow.phy@sam_data[["Year"]]
data.scores.all$Location<-narrow.phy@sam_data[["LocnDescriptor"]]
data.scores.all$LocationNumber<-narrow.phy@sam_data[["LocnNumber.NtoS"]]
data.scores.all$Longitude_N <- narrow.phy@sam_data[["Long-N"]]
data.scores.all$Lattitude_W <- narrow.phy@sam_data[["Lat-W"]]
data.scores.all$Depth <- narrow.phy@sam_data[["Depth"]]
data.scores.all$Temperature <-  narrow.phy@sam_data[["Temp"]]
data.scores.all$Cond <- narrow.phy@sam_data[["Cond"]]
data.scores.all$Sal <- narrow.phy@sam_data[["Sal"]]
data.scores.all$DO-pct <- narrow.phy@sam_data[["DO_pct"]]
data.scores.all <- as.data.frame(scores(narrow.mds.all))
data.scores.all$sample <- rownames(data.scores.all)
data.scores.all$Year.Station<-narrow.phy@sam_data[["Year.Station"]]
data.scores.all$Year<-narrow.phy@sam_data[["Year"]]
data.scores.all$Location<-narrow.phy@sam_data[["LocnDescriptor"]]
data.scores.all$LocationNumber<-narrow.phy@sam_data[["LocnNumber.NtoS"]]
data.scores.all$Longitude_N <- narrow.phy@sam_data[["Long-N"]]
data.scores.all$Lattitude_W <- narrow.phy@sam_data[["Lat-W"]]
data.scores.all$Depth <- narrow.phy@sam_data[["Depth"]]
data.scores.all$Temperature <-  narrow.phy@sam_data[["Temp"]]
data.scores.all$Cond <- narrow.phy@sam_data[["Cond"]]
data.scores.all$Sal <- narrow.phy@sam_data[["Sal"]]
data.scores.all$DO_pct <- narrow.phy@sam_data[["DO_pct"]]
data.scores.all$DO_mgl <- narrow.phy@sam_data[["DO_mgL"]]
data.scores.all$Chl_a <- narrow.phy@sam_data[["chl-a"]]
data.scores.all$LiveWater <- narrow.phy@sam_data[["LiveWater"]]
data.scores.all$Lugols <- narrow.phy@sam_data[["Lugols"]]
data.scores.all$Glut <- narrow.phy@sam_data[["Glut"]]
data.scores.all$Fv/Fm <- narrow.phy@sam_data[["Fv/Fm"]]
data.scores.all <- as.data.frame(scores(narrow.mds.all))
data.scores.all$sample <- rownames(data.scores.all)
data.scores.all$Year.Station<-narrow.phy@sam_data[["Year.Station"]]
data.scores.all$Year<-narrow.phy@sam_data[["Year"]]
data.scores.all$Location<-narrow.phy@sam_data[["LocnDescriptor"]]
data.scores.all$LocationNumber<-narrow.phy@sam_data[["LocnNumber.NtoS"]]
data.scores.all$Longitude_N <- narrow.phy@sam_data[["Long-N"]]
data.scores.all$Lattitude_W <- narrow.phy@sam_data[["Lat-W"]]
data.scores.all$Depth <- narrow.phy@sam_data[["Depth"]]
data.scores.all$Temperature <-  narrow.phy@sam_data[["Temp"]]
data.scores.all$Cond <- narrow.phy@sam_data[["Cond"]]
data.scores.all$Sal <- narrow.phy@sam_data[["Sal"]]
data.scores.all$DO_pct <- narrow.phy@sam_data[["DO_pct"]]
data.scores.all$DO_mgl <- narrow.phy@sam_data[["DO_mgL"]]
data.scores.all$Chl_a <- narrow.phy@sam_data[["chl-a"]]
data.scores.all$LiveWater <- narrow.phy@sam_data[["LiveWater"]]
data.scores.all$Lugols <- narrow.phy@sam_data[["Lugols"]]
data.scores.all$Glut <- narrow.phy@sam_data[["Glut"]]
data.scores.all$Fv_Fm <- narrow.phy@sam_data[["Fv/Fm"]]
data.scores.all$Nanodrop_conc <- narrow.phy@sam_data[["Nanodrop_conc"]]
data.scores.all$Nanodrop_260280 <- narrow.phy@sam_data[["Nanodrop_260280"]]
data.scores.all$Nanodop_260230 <- narrow.phy@sam_data[["Nanodrop_260230"]]
data.scores.all <- as.data.frame(scores(narrow.mds.all))
data.scores.all$sample <- rownames(data.scores.all)
data.scores.all$Year.Station<-narrow.phy@sam_data[["Year.Station"]]
data.scores.all$Year<-narrow.phy@sam_data[["Year"]]
data.scores.all$Location<-narrow.phy@sam_data[["LocnDescriptor"]]
data.scores.all$LocationNumber<-narrow.phy@sam_data[["LocnNumber.NtoS"]]
data.scores.all$Longitude_N <- narrow.phy@sam_data[["Long-N"]]
data.scores.all$Lattitude_W <- narrow.phy@sam_data[["Lat-W"]]
data.scores.all$Depth <- narrow.phy@sam_data[["Depth"]]
data.scores.all$Temperature <-  narrow.phy@sam_data[["Temp"]]
data.scores.all$Cond <- narrow.phy@sam_data[["Cond"]]
data.scores.all$Sal <- narrow.phy@sam_data[["Sal"]]
data.scores.all$DO_pct <- narrow.phy@sam_data[["DO_pct"]]
data.scores.all$DO_mgl <- narrow.phy@sam_data[["DO_mgL"]]
data.scores.all$Chl_a <- narrow.phy@sam_data[["chl-a"]]
data.scores.all$LiveWater <- narrow.phy@sam_data[["LiveWater"]]
data.scores.all$Lugols <- narrow.phy@sam_data[["Lugols"]]
data.scores.all$Glut <- narrow.phy@sam_data[["Glut"]]
data.scores.all$Fv_Fm <- narrow.phy@sam_data[["Fv/Fm"]]
data.scores.all$Nanodrop_conc <- narrow.phy@sam_data[["Nanodrop_conc"]]
data.scores.all$Nanodrop_260280 <- narrow.phy@sam_data[["Nanodrop_260280"]]
data.scores.all$Nanodop_260230 <- narrow.phy@sam_data[["Nanodrop_260230"]]
fig.sap.ecto.nmds <-
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3, color= oakiness.col) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3, color= pininess.col) +
facet_grid(acid_type~ group) +
xlim(-.5, .5)+
ylim(-.5, .5)+
scale_shape_manual(values= c(15,16,17,18), name= "Transect", labels= c("Transect 1", "Transect 2",
"Transect 3", "Transect 4" ))+
scale_alpha_continuous(name= "Neighbor \navailability") +
theme_classic()
fig.sap.ecto.nmds <-
ggplot(data.scores.all)
View(fig.sap.ecto.nmds)
ggplot(data.scores.all)
?ggplot
ggplot(data.scores.all)
plot(data.scores.all)
ggplot(data.scores.all)
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3, color= oakiness.col) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3, color= pininess.col) +
facet_grid(acid_type~ group) +
xlim(-.5, .5)+
ylim(-.5, .5)+
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3, color= oakiness.col) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3, color= pininess.col) +
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3, color= oakiness.col) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3, color= pininess.col)
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3)
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3)
ggplot(data.scores.all)
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3)
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3)
ggplot(data.scores.all)
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3, color= oakiness.col) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3, color= pininess.col) +
facet_grid(acid_type~ group) +
xlim(-.5, .5)+
ylim(-.5, .5)+
scale_shape_manual(values= c(15,16,17,18), name= "Transect", labels= c("Transect 1", "Transect 2",
"Transect 3", "Transect 4" ))+
scale_alpha_continuous(name= "Neighbor \navailability") +
theme_classic()
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3) +
facet_grid(acid_type~ group) +
xlim(-.5, .5)+
ylim(-.5, .5)+
scale_shape_manual(values= c(15,16,17,18), name= "Transect", labels= c("Transect 1", "Transect 2",
"Transect 3", "Transect 4" ))+
scale_alpha_continuous(name= "Neighbor \navailability") +
theme_classic()
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3) +
facet_grid(Location~ group) +
xlim(-.5, .5)+
ylim(-.5, .5)+
scale_shape_manual(values= c(15,16,17,18), name= "Transect", labels= c("Transect 1", "Transect 2",
"Transect 3", "Transect 4" ))+
scale_alpha_continuous(name= "Neighbor \navailability") +
theme_classic()
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3) +
facet_grid(Location~ Year) +
xlim(-.5, .5)+
ylim(-.5, .5)+
scale_shape_manual(values= c(15,16,17,18), name= "Transect", labels= c("Transect 1", "Transect 2",
"Transect 3", "Transect 4" ))+
scale_alpha_continuous(name= "Neighbor \navailability") +
theme_classic()
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3) +
facet_grid(Location~ Year) +
xlim(-.5, .5)+
ylim(-.5, .5)+
fig.black.shapes <-
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3, color= "gray47")+
scale_shape_manual(values= c(15,16,17,18), name= "Transect", labels= c("Transect 1", "Transect 2", "Transect 3", "Transect 4" ))
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3) +
facet_grid(Location~ Year) +
xlim(-.5, .5)+
ylim(-.5, .5)+
shape.legend <- get_legend(fig.black.shapes)
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3) +
facet_grid(Location~ Year) +
xlim(-.5, .5)+
ylim(-.5, .5)+
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(transect)), size =3) +
facet_grid(Location~ Year) +
xlim(-.5, .5)+
ylim(-.5, .5)
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Temperature)), size =3) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Temperature)), size =3) +
facet_grid(Location~ Year) +
xlim(-.5, .5)+
ylim(-.5, .5)
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Temperature)), size =3) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Temperature)), size =3) +
facet_grid(Location~ Year) +
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Temperature)), size =3) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Temperature)), size =3) +
facet_grid(Location~ Year)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(phyloseq)
library(metagenomeSeq)
library(vegan)
library(here)
library(janitor)
library(gridExtra)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,2:length(Metadata[0,])]
rownames(Metadata.renamed)<- Metadata$SampleNo
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata$SampleNo
narrow.phy = phyloseq(phy.otu, phy.meta)
make_metagenomeSeq = function(physeq) {
require("metagenomeSeq")
require("phyloseq")
# Enforce orientation
if (!taxa_are_rows(physeq)) {
physeq <- t(physeq)}
OTU = as(otu_table(physeq), "matrix")
# Convert sample_data to AnnotatedDataFrame
ADF = AnnotatedDataFrame(data.frame(sample_data(physeq)))
# define dummy 'feature' data for OTUs, using their name Helps with
# extraction and relating to taxonomy later on.
TDF = AnnotatedDataFrame(data.frame(OTUname = taxa_names(physeq), row.names = taxa_names(physeq)))
# Create the metagenomeSeq object
MGS = newMRexperiment(counts = OTU, phenoData = ADF, featureData = TDF)
# Trigger metagenomeSeq to calculate its Cumulative Sum scaling factor.
MGS = cumNorm(MGS)
return(MGS)
}
meta.narrow.all<-meta.narrow
narrow.css.all <-MRcounts(meta.narrow.all, norm= TRUE, log= TRUE)
narrow.csst.all <- t(narrow.css.all)
narrow.dist.all <- vegdist(narrow.csst.all, method= "bray", binary=FALSE, diag=TRUE, upper=TRUE)
set.seed(209)
narrow.mds.all <- metaMDS(narrow.dist.all, distance = "bray", k=2, trymax = 1000)
meta.narrow = transform_sample_counts(meta.narrow, function(x) x/sum(x))
data.scores.all <- as.data.frame(scores(narrow.mds.all))
data.scores.all$sample <- rownames(data.scores.all)
data.scores.all$Year.Station<-narrow.phy@sam_data[["Year.Station"]]
data.scores.all$Year<-narrow.phy@sam_data[["Year"]]
data.scores.all$Location<-narrow.phy@sam_data[["LocnDescriptor"]]
data.scores.all$LocationNumber<-narrow.phy@sam_data[["LocnNumber.NtoS"]]
data.scores.all$Longitude_N <- narrow.phy@sam_data[["Long-N"]]
data.scores.all$Lattitude_W <- narrow.phy@sam_data[["Lat-W"]]
data.scores.all$Depth <- narrow.phy@sam_data[["Depth"]]
data.scores.all$Temperature <-  narrow.phy@sam_data[["Temp"]]
data.scores.all$Cond <- narrow.phy@sam_data[["Cond"]]
data.scores.all$Sal <- narrow.phy@sam_data[["Sal"]]
data.scores.all$DO_pct <- narrow.phy@sam_data[["DO_pct"]]
data.scores.all$DO_mgl <- narrow.phy@sam_data[["DO_mgL"]]
data.scores.all$Chl_a <- narrow.phy@sam_data[["chl-a"]]
data.scores.all$LiveWater <- narrow.phy@sam_data[["LiveWater"]]
data.scores.all$Lugols <- narrow.phy@sam_data[["Lugols"]]
data.scores.all$Glut <- narrow.phy@sam_data[["Glut"]]
data.scores.all$Fv_Fm <- narrow.phy@sam_data[["Fv/Fm"]]
data.scores.all$Nanodrop_conc <- narrow.phy@sam_data[["Nanodrop_conc"]]
data.scores.all$Nanodrop_260280 <- narrow.phy@sam_data[["Nanodrop_260280"]]
data.scores.all$Nanodop_260230 <- narrow.phy@sam_data[["Nanodrop_260230"]]
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Temperature)), size =3) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Temperature)), size =3) +
facet_grid(Location~ Year)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(phyloseq)
library(metagenomeSeq)
library(vegan)
library(here)
library(janitor)
library(gridExtra)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,2:length(Metadata[0,])]
rownames(Metadata.renamed)<- Metadata$SampleNo
