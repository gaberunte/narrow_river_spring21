knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
```{r read in files}
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
```{r read in files}
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
View(asvs_counts)
```{r}
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
View(asvs_taxonomy)
View(asvs_taxonomy)
asvs_taxonomy = read_csv(here("data", "Narragansett_Metadata.txt"))
Metadata = read_csv(here("data", "Narragansett_Metadata.txt"))
View(Metadata)
View(Metadata)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "Narragansett_Metadata.txt"))
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(phyloseq)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(phyloseq)
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(phyloseq)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "Narragansett_Metadata.csv"))
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata$SampleNo
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(phyloseq)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "Narragansett_Metadata.csv"))
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata$SampleNo
narrow.phy = phyloseq(phy.otu, phy.meta)
View(phy.meta)
View(asvs_taxonomy)
View(asvs_counts.renamed)
View(asvs_counts)
View(phy.meta)
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata$SampleNo
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata$SampleNo
View(phy.meta)
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
sample_names(phy.meta) = Metadata$SampleNo
View(phy.meta)
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata
library(knitr)
library(rmdformats)
library("kableExtra")
## Global options
# The following line is necessary to make sure that
# everything is not reevaluated each time the file is knit
# Note : in the case of this report it is necessary to leave cache= FALSE
options(max.print="75")
knitr::opts_chunk$set(fig.width=8,
fig.height=6,
eval=TRUE,
cache=TRUE,
echo=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=85)
library("phyloseq")
library("ggplot2")      # graphics
library("readxl")       # necessary to import the data from Excel file
library("dplyr")        # filter and reformat data frames
library("tibble")       # Needed for converting column to row names
knitr::include_graphics("../img/table_otu.png")
otu_mat<- read_excel("../data/CARBOM data.xlsx", sheet = "OTU matrix")
tax_mat<- read_excel("../data/CARBOM data.xlsx", sheet = "Taxonomy table")
samples_df <- read_excel("../data/CARBOM data.xlsx", sheet = "Samples")
View(otu_mat)
View(tax_mat)
View(samples_df)
View(phy.meta)
View(otu_mat)
View(phy.meta)
View(asvs_counts)
View(asvs_taxonomy)
tax_mat <- tax_mat %>%
tibble::column_to_rownames("otu")
samples_df <- samples_df %>%
tibble::column_to_rownames("sample")
View(samples_df)
otu_mat<- read_excel("../data/CARBOM data.xlsx", sheet = "OTU matrix")
tax_mat<- read_excel("../data/CARBOM data.xlsx", sheet = "Taxonomy table")
samples_df <- read_excel("../data/CARBOM data.xlsx", sheet = "Samples")
View(samples_df)
tax_mat <- tax_mat %>%
tibble::column_to_rownames("otu")
samples_df <- samples_df %>%
tibble::column_to_rownames("sample")
otu_mat <- as.matrix(otu_mat)
tax_mat <- as.matrix(tax_mat)
OTU = otu_table(otu_mat, taxa_are_rows = TRUE)
OTU = otu_table(otu_mat, taxa_are_rows = TRUE)
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata$SampleNo
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
samples = sample_data(phy.meta)
narrow.phy = phyloseq(phy.otu, phy.meta)
View(phy.meta)
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata$SampleNo
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata
View(phy.meta)
phy.meta <- as.matrix(phy.meta)
View(phy.meta)
View(otu_mat)
View(phy.meta)
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
samples = sample_data(Metadata)
narrow.phy = phyloseq(phy.otu, phy.meta)
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
samples = sample_names(Metadata)
narrow.phy = phyloseq(phy.otu, phy.meta)
OTU = otu_table(otu_mat, taxa_are_rows = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(phyloseq)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "Narragansett_Metadata.csv"))
View(asvs_counts)
View(asvs_counts.renamed)
View(asvs_taxonomy)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "Narragansett_Metadata.csv"))
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "Narragansett_Metadata.csv"))
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata$SampleNo
View(phy.meta)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "Narragansett_Metadata.txt"))
View(Metadata)
View(phy.meta)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_txt(here("data", "Narragansett_Metadata.txt"))
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "Narragansett_Metadata.txt"))
View(Metadata)
View(Metadata)
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata$SampleNo
View(Metadata)
View(phy.meta)
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(phyloseq)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
View(Metadata)
View(asvs_counts.renamed)
View(asvs_taxonomy)
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_name(phy.meta) = Metadata
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(phyloseq)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df"))
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
View(Metadata)
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata$SampleNo
narrow.phy = phyloseq(phy.otu, phy.meta)
View(asvs_taxonomy)
View(asvs_counts.renamed)
View(asvs_counts)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,2:length(Metadata[1,])]
View(Metadata.renamed)
View(Metadata)
View(Metadata.renamed)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,1:length(Metadata[1,])]
View(Metadata.renamed)
View(Metadata)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,2:length(Metadata[1,])]
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,2:length(Metadata[2,])]
View(Metadata.renamed)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,0:length(Metadata[1,])]
View(Metadata.renamed)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,1:length(Metadata[1,])]
View(Metadata)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,1:length(Metadata[0,])]
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,2:length(Metadata[0,])]
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,1:length(Metadata[0,])]
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata$SampleNo
narrow.phy = phyloseq(phy.otu, phy.meta)
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata$SampleNo
narrow.phy = phyloseq(phy.otu, phy.meta)
View(phy.meta)
plot_bar(narrow.phy, fill = "Division")
View(narrow.phy)
sample_names(narrow.phy)
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata$SampleNo
narrow.phy = phyloseq(phy.otu, phy.meta)
sample_variables(narrow.phy)
plot_bar(carbom, fill = "Division")
plot_bar(narrow.phy, fill = "Division")
plot_bar(narrow.phy, fill = "Division")
library("phyloseq")
library("ggplot2")
library("readxl")       # necessary to import the data from Excel file
library("dplyr")        # filter and reformat data frames
library("tibble")       # Needed for converting column to row names
plot_bar(narrow.phy, fill = "Division")
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(phyloseq)
library("ggplot2")
library("readxl")
library("dplyr")
library("tibble")
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,1:length(Metadata[0,])]
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata$SampleNo
narrow.phy = phyloseq(phy.otu, phy.meta)
plot_bar(narrow.phy, fill = "Division")
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(phyloseq)
sample_variables(narrow.phy)
View(narrow.phy)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,1:length(Metadata[0,])]
