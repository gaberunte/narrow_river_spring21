#Temp, Year, and LiveWater account for almost everything
narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Depth+sample_data(narrow.phy)$Temp, data=Metadata )
narrow.perm$aov.tab
#does temperature drive dissimilarity
#narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
#narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Depth+sample_data(narrow.phy)$Temp+sample_data(narrow.phy)$Year, data=Metadata )
#narrow.perm$aov.tab
#does depth drive dissimilarity
#narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
#narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Depth, data=Metadata )
#narrow.perm$aov.tab
#does LocnDescriptor drive dissimilarity
#narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
#narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$LocnDescriptor, data=Metadata )
#narrow.perm$aov.tab
#looking at everything
#narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
#narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Sal+sample_data(narrow.phy)$Temp+sample_data(narrow.phy)$Cond+sample_data(narrow.phy)$Depth+sample_data(narrow.phy)$LocnNumber.NtoS+sample_data(narrow.phy)$Year.Station+sample_data(narrow.phy)$DO_mgL+sample_data(narrow.phy)$LiveWater+sample_data(narrow.phy)$Year, data=Metadata )
#narrow.perm$aov.tab
#Temp, Year, and LiveWater account for almost everything
narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Depth+sample_data(narrow.phy)$Temp+sample_data(narrow.phy)$LocnDescriptor, data=Metadata )
narrow.perm$aov.tab
#Location/Temp/Depth
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Location),  color= Location), size =3) +
facet_wrap(~Depth)
#Location/Temp/Depth
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Location),  color= Depth), size =3) +
facet_wrap(~Depth)
#Location/Temp/Depth
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Location),  color= Temperature), size =3) +
facet_wrap(~Depth)
#does temperature drive dissimilarity
#narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
#narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Depth+sample_data(narrow.phy)$Temp+sample_data(narrow.phy)$Year, data=Metadata )
#narrow.perm$aov.tab
#does depth drive dissimilarity
#narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
#narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Depth, data=Metadata )
#narrow.perm$aov.tab
#does LocnDescriptor drive dissimilarity
narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$LocnDescriptor, data=Metadata )
narrow.perm$aov.tab
#looking at everything
#narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
#narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Sal+sample_data(narrow.phy)$Temp+sample_data(narrow.phy)$Cond+sample_data(narrow.phy)$Depth+sample_data(narrow.phy)$LocnNumber.NtoS+sample_data(narrow.phy)$Year.Station+sample_data(narrow.phy)$DO_mgL+sample_data(narrow.phy)$LiveWater+sample_data(narrow.phy)$Year, data=Metadata )
#narrow.perm$aov.tab
#Temp, Year, and LiveWater account for almost everything
narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Depth+sample_data(narrow.phy)$Temp+sample_data(narrow.phy)$LocnDescriptor, data=Metadata )
narrow.perm$aov.tab
#does temperature drive dissimilarity
narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Depth+sample_data(narrow.phy)$Temp+sample_data(narrow.phy)$Year, data=Metadata )
narrow.perm$aov.tab
#does depth drive dissimilarity
narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Depth, data=Metadata )
narrow.perm$aov.tab
#does LocnDescriptor drive dissimilarity
narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$LocnDescriptor, data=Metadata )
narrow.perm$aov.tab
#looking at everything
narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Sal+sample_data(narrow.phy)$Temp+sample_data(narrow.phy)$Cond+sample_data(narrow.phy)$Depth+sample_data(narrow.phy)$LocnNumber.NtoS+sample_data(narrow.phy)$Year.Station+sample_data(narrow.phy)$DO_mgL+sample_data(narrow.phy)$LiveWater+sample_data(narrow.phy)$Year, data=Metadata )
narrow.perm$aov.tab
#looking at everything
narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Cond+sample_data(narrow.phy)$Depth+sample_data(narrow.phy)$LocnNumber.NtoS+sample_data(narrow.phy)$Year.Station+sample_data(narrow.phy)$DO_mgL+sample_data(narrow.phy)$LiveWater+sample_data(narrow.phy)$Year, data=Metadata )
narrow.perm$aov.tab
#looking at everything
narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$LiveWater+sample_data(narrow.phy)$Year, data=Metadata )
narrow.perm$aov.tab
#Temp, Year, and LiveWater account for almost everything
narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Depth+sample_data(narrow.phy)$Temp+sample_data(narrow.phy)$LocnDescriptor, data=Metadata )
narrow.perm$aov.tab
#does temperature drive dissimilarity
narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Depth+sample_data(narrow.phy)$Temp+sample_data(narrow.phy)$Year, data=Metadata )
narrow.perm$aov.tab
#Temp, Year, and LiveWater account for almost everything
narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Depth+sample_data(narrow.phy)$Temp+sample_data(narrow.phy)$LocnDescriptor+sample_data(narrow.phy)$Year, data=Metadata )
narrow.perm$aov.tab
#Temp, Year, Depth and LocnDescriptor account for almost everything
narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Depth+sample_data(narrow.phy)$Temp+sample_data(narrow.phy)$LocnDescriptor+sample_data(narrow.phy)$Year, data=Metadata )
narrow.perm$aov.tab
#Location and Year
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Year),  color= as.factor(Year)), size =3) +
facet_wrap(~Location)
Temp and Year
#Location and Year
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Year),  color= as.factor(Year)), size =3) +
facet_wrap(~Location)
#Temp and Year
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Year),  color= Temperature), size =3)
narrow.phy@sam_data[["Nanodrop_260280"]]
if (!require(git2r)) {
install.packages("git2r", repos="http://cran.r-project.org/", quiet=TRUE)
library(git2r)
}
repo <- repository(".")
push(repo, credentials=cred_user_pass("your_username", "your_password"))
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,2:length(Metadata[0,])]
rownames(Metadata.renamed)<- Metadata$SampleNo
if (!require(git2r)) {
install.packages("git2r", repos="http://cran.r-project.org/", quiet=TRUE)
library(git2r)
}
repo <- repository(".")
push(repo, credentials=cred_user_pass("Nicholas-Haghani", "Dinodog987!"))
if (!require(git2r)) {
install.packages("git2r", repos="http://cran.r-project.org/", quiet=TRUE)
library(git2r)
}
repo <- repository(".")
push(repo, credentials=cred_user_pass("Nicholas-Haghani", "Dinodog987!"))
if (!require(git2r)) {
install.packages("git2r", repos="http://cran.r-project.org/", quiet=TRUE)
library(git2r)
}
repo <- repository(".")
push(repo, credentials=cred_user_pass("Nicholas-Haghani", "Dinodog987!"))
View(narrow.phy)
View(narrow.phy)
View(phy.meta)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(phyloseq)
library(metagenomeSeq)
library(vegan)
library(here)
library(janitor)
library(gridExtra)
plot_bar(narrow.phy, fill = "Division")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(phyloseq)
library(metagenomeSeq)
library(vegan)
library(here)
library(janitor)
library(gridExtra)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,2:length(Metadata[0,])]
rownames(Metadata.renamed)<- Metadata$SampleNo
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata$SampleNo
narrow.phy = phyloseq(phy.otu, phy.meta)
make_metagenomeSeq = function(physeq) {
require("metagenomeSeq")
require("phyloseq")
# Enforce orientation
if (!taxa_are_rows(physeq)) {
physeq <- t(physeq)}
OTU = as(otu_table(physeq), "matrix")
# Convert sample_data to AnnotatedDataFrame
ADF = AnnotatedDataFrame(data.frame(sample_data(physeq)))
# define dummy 'feature' data for OTUs, using their name Helps with
# extraction and relating to taxonomy later on.
TDF = AnnotatedDataFrame(data.frame(OTUname = taxa_names(physeq), row.names = taxa_names(physeq)))
# Create the metagenomeSeq object
MGS = newMRexperiment(counts = OTU, phenoData = ADF, featureData = TDF)
# Trigger metagenomeSeq to calculate its Cumulative Sum scaling factor.
MGS = cumNorm(MGS)
return(MGS)
}
meta.narrow <- make_metagenomeSeq(narrow.phy)
meta.narrow.all<-meta.narrow
narrow.css.all <-MRcounts(meta.narrow.all, norm= TRUE, log= TRUE)
narrow.csst.all <- t(narrow.css.all)
narrow.dist.all <- vegdist(narrow.csst.all, method= "bray", binary=FALSE, diag=TRUE, upper=TRUE)
set.seed(209)
narrow.mds.all <- metaMDS(narrow.dist.all, distance = "bray", k=2, trymax = 1000)
#meta.narrow = transform_sample_counts(meta.narrow, function(x) x/sum(x))
data.scores.all <- as.data.frame(scores(narrow.mds.all))
data.scores.all$sample <- rownames(data.scores.all)
data.scores.all$Year.Station<-narrow.phy@sam_data[["Year.Station"]]
data.scores.all$Year<-narrow.phy@sam_data[["Year"]]
data.scores.all$Location<-narrow.phy@sam_data[["LocnDescriptor"]]
data.scores.all$LocationNumber<-narrow.phy@sam_data[["LocnNumber.NtoS"]]
data.scores.all$Longitude_N <- narrow.phy@sam_data[["Long-N"]]
data.scores.all$Lattitude_W <- narrow.phy@sam_data[["Lat-W"]]
data.scores.all$Depth <- narrow.phy@sam_data[["Depth"]]
data.scores.all$Temperature <-  narrow.phy@sam_data[["Temp"]]
data.scores.all$Cond <- narrow.phy@sam_data[["Cond"]]
data.scores.all$Sal <- narrow.phy@sam_data[["Sal"]]
data.scores.all$DO_pct <- narrow.phy@sam_data[["DO_pct"]]
data.scores.all$DO_mgl <- narrow.phy@sam_data[["DO_mgL"]]
data.scores.all$Chl_a <- narrow.phy@sam_data[["chl-a"]]
data.scores.all$LiveWater <- narrow.phy@sam_data[["LiveWater"]]
data.scores.all$Lugols <- narrow.phy@sam_data[["Lugols"]]
data.scores.all$Glut <- narrow.phy@sam_data[["Glut"]]
data.scores.all$Fv_Fm <- narrow.phy@sam_data[["Fv/Fm"]]
data.scores.all$Nanodrop_conc <- narrow.phy@sam_data[["Nanodrop_conc"]]
data.scores.all$Nanodrop_260280 <- narrow.phy@sam_data[["Nanodrop_260280"]]
data.scores.all$Nanodop_260230 <- narrow.phy@sam_data[["Nanodrop_260230"]]
#Location and Year
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Year),  color= as.factor(Year)), size =3) +
facet_wrap(~Location)
#Temp and Year
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Year),  color= Temperature), size =3)
#Shallow river samples were taken at lower depths
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Location),  color= Location), size =3) +
facet_wrap(~Depth)
#Drop in Depth = drop in Temp
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Location),  color= Temperature), size =3) +
facet_wrap(~Depth)
plot_bar(narrow.phy, fill = "Division")
View(narrow.phy)
View(asvs_taxonomy)
plot_bar(narrow.phy, fill = "Domain")
plot_bar(narrow.phy, fill = "Year")
plot_bar(narrow.phy, fill = "LocnDescriptor")
View(narrow.phy)
plot_bar(otu_table(), fill = "LocnDescriptor")
plot_bar(phy.otu, fill = "LocnDescriptor")
View(narrow.phy)
View(narrow.mds.all)
View(meta_narrow)
plot_bar(narrow.mds.all, fill = "LocnDescriptor")
plot_bar(phy.otu, fill = "LocnDescriptor")
plot_bar(narrow.phy, fill = "LocnDescriptor")
plot(narrow.phy, fill = "LocnDescriptor")
plot(narrow.phy, fill = "LocnDescriptor")
plot_bar(narrow.phy, fill = "LocnDescriptor")
View(Metadata)
plot_bar(Metadata, fill = "LocnDescriptor")
plot_bar(Metadata)
plot_bar(narrow.phy, fill = "LocnDescriptor")
View(Metadata.renamed)
plot_bar(Metadata.renamed)
plot_bar(narrow.phy, fill = "LocnDescriptor")
plot_bar(narrow.phy)
carbom.ord <- ordinate(phy.meta, "NMDS", "bray")
carbom.ord <- ordinate(narrow.phy, "NMDS", "bray")
plot_ordination(narrow.phy, carbom.ord, type="taxa", color="Class", shape= "Division",
title="OTUs")
View(asvs_taxonomy)
carbom.ord <- ordinate(narrow.phy, "NMDS", "bray")
plot_ordination(narrow.phy, carbom.ord, type="Phylum", color="Class", shape= "Division",
title="OTUs")
carbom.ord <- ordinate(narrow.phy, "NMDS", "bray")
plot_ordination(narrow.phy, carbom.ord, type="taxa", color="Phylum", shape= "Division",
title="OTUs")
View(asvs_taxonomy)
View(asvs_counts.renamed)
carbom.ord <- ordinate(narrow.phy, "NMDS", "bray")
plot_ordination(narrow.phy, asvs_taxonomy, type="taxa", color="Phylum", shape= "Division",
title="OTUs")
carbom.ord <- ordinate(narrow.phy, "NMDS", "bray")
plot_ordination(narrow.phy, carbom.ord, type="taxa", color="Phylum", shape= "Division",
title="OTUs")
carbom.ord <- ordinate(asvs_taxonomy, "NMDS", "bray")
carbom.ord <- ordinate(narrow.phy, "NMDS", "bray")
plot_ordination(narrow.phy, carbom.ord, type="taxa", color="Phylum", shape= "Division",
title="OTUs")
View(asvs_taxonomy)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(phyloseq)
library(metagenomeSeq)
library(vegan)
library(here)
library(janitor)
library(gridExtra)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(phyloseq)
library(metagenomeSeq)
library(vegan)
library(here)
library(janitor)
library(gridExtra)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,2:length(Metadata[0,])]
rownames(Metadata.renamed)<- Metadata$SampleNo
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
sample_names(phy.meta) = Metadata$SampleNo
narrow.phy = phyloseq(phy.otu, phy.meta)
make_metagenomeSeq = function(physeq) {
require("metagenomeSeq")
require("phyloseq")
# Enforce orientation
if (!taxa_are_rows(physeq)) {
physeq <- t(physeq)}
OTU = as(otu_table(physeq), "matrix")
# Convert sample_data to AnnotatedDataFrame
ADF = AnnotatedDataFrame(data.frame(sample_data(physeq)))
# define dummy 'feature' data for OTUs, using their name Helps with
# extraction and relating to taxonomy later on.
TDF = AnnotatedDataFrame(data.frame(OTUname = taxa_names(physeq), row.names = taxa_names(physeq)))
# Create the metagenomeSeq object
MGS = newMRexperiment(counts = OTU, phenoData = ADF, featureData = TDF)
# Trigger metagenomeSeq to calculate its Cumulative Sum scaling factor.
MGS = cumNorm(MGS)
return(MGS)
}
meta.narrow <- make_metagenomeSeq(narrow.phy)
meta.narrow.all<-meta.narrow
narrow.css.all <-MRcounts(meta.narrow.all, norm= TRUE, log= TRUE)
narrow.csst.all <- t(narrow.css.all)
narrow.dist.all <- vegdist(narrow.csst.all, method= "bray", binary=FALSE, diag=TRUE, upper=TRUE)
set.seed(209)
narrow.mds.all <- metaMDS(narrow.dist.all, distance = "bray", k=2, trymax = 1000)
#meta.narrow = transform_sample_counts(meta.narrow, function(x) x/sum(x))
data.scores.all <- as.data.frame(scores(narrow.mds.all))
data.scores.all$sample <- rownames(data.scores.all)
data.scores.all$Year.Station<-narrow.phy@sam_data[["Year.Station"]]
data.scores.all$Year<-narrow.phy@sam_data[["Year"]]
data.scores.all$Location<-narrow.phy@sam_data[["LocnDescriptor"]]
data.scores.all$LocationNumber<-narrow.phy@sam_data[["LocnNumber.NtoS"]]
data.scores.all$Longitude_N <- narrow.phy@sam_data[["Long-N"]]
data.scores.all$Lattitude_W <- narrow.phy@sam_data[["Lat-W"]]
data.scores.all$Depth <- narrow.phy@sam_data[["Depth"]]
data.scores.all$Temperature <-  narrow.phy@sam_data[["Temp"]]
data.scores.all$Cond <- narrow.phy@sam_data[["Cond"]]
data.scores.all$Sal <- narrow.phy@sam_data[["Sal"]]
data.scores.all$DO_pct <- narrow.phy@sam_data[["DO_pct"]]
data.scores.all$DO_mgl <- narrow.phy@sam_data[["DO_mgL"]]
data.scores.all$Chl_a <- narrow.phy@sam_data[["chl-a"]]
data.scores.all$LiveWater <- narrow.phy@sam_data[["LiveWater"]]
data.scores.all$Lugols <- narrow.phy@sam_data[["Lugols"]]
data.scores.all$Glut <- narrow.phy@sam_data[["Glut"]]
data.scores.all$Fv_Fm <- narrow.phy@sam_data[["Fv/Fm"]]
data.scores.all$Nanodrop_conc <- narrow.phy@sam_data[["Nanodrop_conc"]]
data.scores.all$Nanodrop_260280 <- narrow.phy@sam_data[["Nanodrop_260280"]]
data.scores.all$Nanodop_260230 <- narrow.phy@sam_data[["Nanodrop_260230"]]
#Location and Year
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Year),  color= as.factor(Year)), size =3) +
facet_wrap(~Location)
#Temp and Year
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Year),  color= Temperature), size =3)
#Shallow river samples were taken at lower depths
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Location),  color= Location), size =3) +
facet_wrap(~Depth)
#Drop in Depth = drop in Temp
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Location),  color= Temperature), size =3) +
facet_wrap(~Depth)
#does temperature drive dissimilarity
narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Depth+sample_data(narrow.phy)$Temp+sample_data(narrow.phy)$Year, data=Metadata )
narrow.perm$aov.tab
#does LocnDescriptor drive dissimilarity
narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$LocnDescriptor, data=Metadata )
narrow.perm$aov.tab
#LiveWater messing things up?
narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$LiveWater+sample_data(narrow.phy)$Year, data=Metadata )
narrow.perm$aov.tab
#Temp, Year, Depth and LocnDescriptor account for almost everything outside of LiveWater
narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Depth+sample_data(narrow.phy)$Temp+sample_data(narrow.phy)$LocnDescriptor+sample_data(narrow.phy)$Year, data=Metadata )
narrow.perm$aov.tab
boxplot(narrow.phy)
View(narrow.phy)
boxplot(narrow.phy, "LocnDescriptor")
plot_bar(narrow.phy, fill ="LocnDescriptor")
View(narrow.csst.all)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,2:length(Metadata[0,])]
rownames(Metadata.renamed)<- Metadata$SampleNo
View(asvs_taxonomy)
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
phy.taxa = tax_table(asvs_taxonomy)
sample_names(phy.meta) = Metadata$SampleNo
narrow.phy = phyloseq(phy.otu, phy.meta)
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
phy.taxa = tax_table(asvs_taxonomy)
sample_names(phy.meta) = Metadata$SampleNo
narrow.phy = phyloseq(phy.otu, phy.meta, phy.taxa)
View(asvs_taxonomy)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
rownames(asvs_taxonomy) = asvs_taxonomy$X1
asvs_taxonomy.renamed = asvs_taxonomy[,2:length(asvs_taxonomy[1,])]
rownames(asvs_taxonomy.renamed) = rownames(asvs_taxonomy)
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,2:length(Metadata[0,])]
rownames(Metadata.renamed)<- Metadata$SampleNo
View(asvs_taxonomy.renamed)
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
phy.taxa = tax_table(asvs_taxonomy.renamed)
sample_names(phy.meta) = Metadata$SampleNo
narrow.phy = phyloseq(phy.otu, phy.meta, phy.taxa)
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
phy.taxa = tax_table(asvs_taxonomy.renamed, taxa_are_rows = TRUE)
?tax_table
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
phy.taxa = tax_table(asvs_taxonomy.renamed, taxa_are_rows = TRUE)
as.matrix(asvs_taxonomy.renamed)
phy.otu = otu_table(asvs_counts.renamed, taxa_are_rows = TRUE)
phy.meta = sample_data(Metadata)
phy.taxa = tax_table(as.matrix(asvs_taxonomy.renamed))
sample_names(phy.meta) = Metadata$SampleNo
narrow.phy = phyloseq(phy.otu, phy.meta, phy.taxa)
View(asvs_taxonomy.renamed)
plot_bar(narrow.phy, fill ="Class")
plot_bar(narrow.phy, fill ="class")
#Shallow river samples were taken at lower depths
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Location),  color= Location), size =3) +
facet_wrap(~Depth)
#Drop in Depth = drop in Temp
ggplot(data.scores.all) +
geom_point(aes(NMDS1, NMDS2,  shape= as.factor(Location),  color= Temperature), size =3) +
facet_wrap(~Depth)
#Temp, Year, Depth and LocnDescriptor account for almost everything outside of LiveWater
narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Depth+sample_data(narrow.phy)$Temp+sample_data(narrow.phy)$Year, data=Metadata )
narrow.perm$aov.tab
View(meta.narrow.all)
View(Metadata)
#Temp, Year, Depth and LocnDescriptor (seems to co=vary with depth) account for almost everything outside of LiveWater
narrow.diss = phyloseq::distance(narrow.phy, method = "bray")
narrow.perm = adonis(narrow.diss~ sample_data(narrow.phy)$Depth+sample_data(narrow.phy)$Temp+sample_data(narrow.phy)$Year+sample_data(narrow.phy)$DO_pct, data=Metadata )
narrow.perm$aov.tab
narrow15.phy<- narrow.phy[narrow.phy@sam_data$Year=="2015"]
meta.15 = Metadata %>%
filter(Year = 2015)
meta.15 = Metadata %>%
filter(Year == "2015")
View(narrow.mds.all)
View(asvs_counts.renamed)
asvs_counts.renamed15 = asvs_counts[,colnames(asvs_counts) %in% meta.15$SampleNo]
View(asvs_counts.renamed15)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
rownames(asvs_taxonomy) = asvs_taxonomy$X1
asvs_taxonomy.renamed = asvs_taxonomy[,2:length(asvs_taxonomy[1,])]
rownames(asvs_taxonomy.renamed) = rownames(asvs_taxonomy)
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,2:length(Metadata[0,])]
rownames(Metadata.renamed)<- Metadata$SampleNo
meta.15 = Metadata %>%
filter(Year == "2015")
asvs_counts.renamed15 = asvs_counts.renamed[,colnames(asvs_counts.renamed) %in% meta.15$SampleNo]
asvs_taxonomy.renamed15 = asvs_taxonomy.renamed[,colnames(asvs_taxonomy.renamed) %in% meta.15$SampleNo]
colnames(asvs_taxonomy.renamed)
asvs_counts = read_tsv(here("data", "ASVs_counts.tsv"))
rownames(asvs_counts) = asvs_counts$X1
asvs_counts.renamed = asvs_counts[,2:length(asvs_counts[1,])]
rownames(asvs_counts.renamed) = rownames(asvs_counts)
asvs_taxonomy = read_tsv(here("data", "ASVs_taxonomy.tsv"))
rownames(asvs_taxonomy) = asvs_taxonomy$X1
asvs_taxonomy.renamed = asvs_taxonomy[,2:length(asvs_taxonomy[1,])]
rownames(asvs_taxonomy.renamed) = rownames(asvs_taxonomy)
Metadata = read_csv(here("data", "testsamples_df.csv"))
Metadata.renamed = Metadata[,2:length(Metadata[0,])]
rownames(Metadata.renamed)<- Metadata$SampleNo
meta.15 = Metadata %>%
filter(Year == "2015")
asvs_counts.renamed15 = asvs_counts.renamed[,colnames(asvs_counts.renamed) %in% meta.15$SampleNo]
asvs_taxonomy.renamed15 = asvs_taxonomy.renamed[rownames(asvs_taxonomy.renamed) %in% rownames(asvs_counts.renamed15),]
View(asvs_taxonomy.renamed15)
rownames(asvs_counts.renamed15)
View(asvs_counts.renamed15)
